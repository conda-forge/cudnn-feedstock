{% set version = "8.0.5.39" %}

package:
  name: cudnn
  version: {{ version }}

source:
  url: https://developer.download.nvidia.com/compute/redist/cudnn/v{{ ".".join(version.split(".")[:3]) }}/cudnn-{{ cuda_compiler_version }}-linux-x64-v{{ version }}.tgz  # [linux64]
  url: https://developer.download.nvidia.com/compute/redist/cudnn/v{{ ".".join(version.split(".")[:3]) }}/cudnn-{{ cuda_compiler_version }}-linux-ppc64le-v{{ version }}.tgz  # [ppc64le]
  url: https://developer.download.nvidia.com/compute/redist/cudnn/v{{ ".".join(version.split(".")[:3]) }}/cudnn-{{ cuda_compiler_version }}-windows10-x64-v{{ version }}.zip  # [win and cuda_compiler_version in ("10.1", "10.2")]
  url: https://developer.download.nvidia.com/compute/redist/cudnn/v{{ ".".join(version.split(".")[:3]) }}/cudnn-{{ cuda_compiler_version }}-windows-x64-v{{ version }}.zip  # [win and cuda_compiler_version not in ("10.1", "10.2")]
  sha256: 3726c58065187f5fc196652481ed05f0b8291dc0ebb6cc274dd7205a11f83d11  # [win64 and cuda_compiler_version == "10.1"]
  sha256: 6a79e51776eef2d0653c9b457d79c0c14b27b64f0e675db9617f03e08e184da4  # [win64 and cuda_compiler_version == "10.2"]
  sha256: a982fbfdecb7a632190c5d2346c19a3cbff86fb2780663b57f3ce547fdd3ce75  # [win64 and cuda_compiler_version == "11.0"]
  sha256: 90908495298896b33aa95063a3471f93c36627d7ac01c17dc36d75c65eea4a00  # [linux64 and cuda_compiler_version == "10.1"]
  sha256: 21f84c05c67bf1ec859e77c38ccd5bf154964fa1c308f449959be4c356e382f3  # [linux64 and cuda_compiler_version == "10.2"]
  sha256: 4e16ee7895deb4a8b1c194b812ba49586ef7d26902051401d3717511898a9b73  # [linux64 and cuda_compiler_version == "11.0"]

build:
  number: 2
  skip: True   # [cuda_compiler_version in ("None", "9.2", "10.0")]
  script:
    - mkdir -p $PREFIX/include               # [unix]
    - cp include/cudnn*.h $PREFIX/include/    # [unix]
    - mkdir -p $PREFIX/lib                   # [unix]
    - mv lib64/libcudnn*.so* $PREFIX/lib/     # [linux64]
    - mv lib/libcudnn*.so* $PREFIX/lib/       # [ppc64le]
    - mkdir %LIBRARY_INC%                    # [win]
    - copy %SRC_DIR%\\include\\cudnn*.h %LIBRARY_INC%\\     # [win]
    - mkdir %LIBRARY_LIB%                    # [win]
    - copy %SRC_DIR%\\lib\\x64\\cudnn*.lib %LIBRARY_LIB%\\  # [win]
    - mkdir %LIBRARY_BIN%                    # [win]
    - copy %SRC_DIR%\\bin\\cudnn*_8.dll %LIBRARY_BIN%\\     # [win]
  ignore_run_exports_from:
    - {{ compiler('c') }}    # [linux]
  run_exports:
    - {{ pin_subpackage('cudnn') }}

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cuda') }}
    - sysroot_linux-64 2.17  # [linux64]
  host:
  run:
    # Only GCC_3.0 or older symbols present
    - libgcc-ng >=3.0     # [linux]
    # Only GLIBCXX_3.4 or older symbols present
    - libstdcxx-ng >=3.4  # [linux]
  run_constrained:
    # Only GLIBC_2.17 or older symbols present
    - __glibc >=2.17      # [ppc64le]

test:
  commands:
    - if not exist %LIBRARY_INC%/cudnn.h exit 1        # [win]
    - if not exist %LIBRARY_INC%/cudnn_adv_train.h exit 1  # [win]
    - if not exist %LIBRARY_LIB%/cudnn.lib exit 1      # [win]
    - if not exist %LIBRARY_LIB%/cudnn_adv_train.lib exit 1      # [win]
    - if not exist %LIBRARY_BIN%/cudnn64_8.dll exit 1  # [win]
    - if not exist %LIBRARY_BIN%/cudnn_adv_train64_8.dll exit 1  # [win]
    - test -f $PREFIX/include/cudnn.h                  # [linux]
    - test -f $PREFIX/include/cudnn_adv_train.h        # [linux]
    - test -f $PREFIX/lib/libcudnn.so                  # [linux]
    - test -f $PREFIX/lib/libcudnn_adv_train.so        # [linux]

about:
  home: https://developer.nvidia.com/cudnn
  license: cuDNN Software License Agreement
  license_file: NVIDIA_SLA_cuDNN_Support.txt
  license_url: https://docs.nvidia.com/deeplearning/cudnn/sla/index.html
  summary: "NVIDIA's cuDNN deep neural network acceleration library"
  description: |
    NVIDIA CUDA Deep Neural Network (cuDNN) is a GPU-accelerated library of
    primitives for deep neural networks. It provides highly tuned
    implementations of routines arising frequently in DNN applications.

    License Agreements:- The packages are governed by the NVIDIA cuDNN
    Software License Agreement (EULA). By downloading and using the packages,
    you accept the terms and conditions of the NVIDIA cuDNN EULA -
    https://docs.nvidia.com/deeplearning/cudnn/sla/index.html
  doc_url: https://docs.nvidia.com/deeplearning/cudnn/
  dev_url: https://developer.nvidia.com/rdp/cudnn-download

extra:
  recipe-maintainers:
    - isuruf
