{% set version = "8.2.1.32" %}

# cuDNN v8.2.x supports CUDA versions 10.2 - 11.3
# For CUDA 10.2 there is a separate cuDNN distribution and a link for download
# For CUDA 11.x there is one cuDNN distribution that works with all CUDA 11 versions
{% if cuda_compiler_version[:2] == "11" %}
{% set cudnn_cuda_version = "11.3" %}
{% else %}
{% set cudnn_cuda_version = cuda_compiler_version %}
{% endif %}

package:
  name: cudnn
  version: {{ version }}

source:
  url: https://developer.download.nvidia.com/compute/redist/cudnn/v{{ ".".join(version.split(".")[:3]) }}/cudnn-{{ cudnn_cuda_version }}-linux-x64-v{{ version }}.tgz  # [linux64]
  url: https://developer.download.nvidia.com/compute/redist/cudnn/v{{ ".".join(version.split(".")[:3]) }}/cudnn-{{ cudnn_cuda_version }}-linux-ppc64le-v{{ version }}.tgz  # [ppc64le]
  url: https://developer.download.nvidia.com/compute/redist/cudnn/v{{ ".".join(version.split(".")[:3]) }}/cudnn-{{ cudnn_cuda_version }}-windows10-x64-v{{ version }}.zip  # [win and cuda_compiler_version == "10.2"]
  url: https://developer.download.nvidia.com/compute/redist/cudnn/v{{ ".".join(version.split(".")[:3]) }}/cudnn-{{ cudnn_cuda_version }}-windows-x64-v{{ version }}.zip  # [win and cuda_compiler_version == "11.2"]
  sha256: 3e70876bdcf44f856d9c9dbdbde07ceec43005e97d5ffe83338b255c8466151f  # [win64 and cuda_compiler_version == "10.2"]
  sha256: 5b9bf2dc4670fb1519ef55e13da5123f0b6b39fac5e6138e31388b269808d5f2  # [win64 and cuda_compiler_version == "11.2"]
  sha256: fd6321ff3bce4ce0cb3342e5bd38c96dcf3b073d44d0808962711c518b6d61e2  # [linux64 and cuda_compiler_version == "10.2"]
  sha256: 39412acd9ef5dd27954b6b9f5df75bd381c5d7ceb7979af6c743a7f4521f9c77  # [linux64 and cuda_compiler_version == "11.2"]

build:
  number: 1
  skip: True   # [cuda_compiler_version in ("None", "9.2", "10.0", "10.1", "11.0", "11.1")]
  script:
    - mkdir -p $PREFIX/include               # [unix]
    - cp include/cudnn*.h $PREFIX/include/    # [unix]
    - mkdir -p $PREFIX/lib                   # [unix]
    - mv lib64/libcudnn*.so* $PREFIX/lib/     # [linux64]
    - mv lib/libcudnn*.so* $PREFIX/lib/       # [ppc64le]
    - mkdir %LIBRARY_INC%                    # [win]
    - copy %SRC_DIR%\\include\\cudnn*.h %LIBRARY_INC%\\     # [win]
    - mkdir %LIBRARY_LIB%                    # [win]
    - copy %SRC_DIR%\\lib\\x64\\cudnn*.lib %LIBRARY_LIB%\\  # [win]
    - mkdir %LIBRARY_BIN%                    # [win]
    - copy %SRC_DIR%\\bin\\cudnn*_8.dll %LIBRARY_BIN%\\     # [win]
  ignore_run_exports_from:
    - {{ compiler('c') }}    # [linux]
    - {{ compiler('cuda') }}
  run_exports:
    - {{ pin_subpackage('cudnn') }}

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cuda') }}
    - sysroot_linux-64 2.17  # [linux64]
  host:
  run:
    # Only GCC_3.0 or older symbols present
    - libgcc-ng >=3.0     # [linux]
    # Only GLIBCXX_3.4 or older symbols present
    - libstdcxx-ng >=3.4  # [linux]
    - cudatoolkit {{ cuda_compiler_version }}  # [cuda_compiler_version == "10.2"]
    - cudatoolkit 11.*  # [cuda_compiler_version == "11.2"]
  run_constrained:
    # Only GLIBC_2.17 or older symbols present
    - __glibc >=2.17      # [ppc64le]

test:
  commands:
    - if not exist %LIBRARY_INC%/cudnn.h exit 1        # [win]
    - if not exist %LIBRARY_INC%/cudnn_adv_train.h exit 1  # [win]
    - if not exist %LIBRARY_LIB%/cudnn.lib exit 1      # [win]
    - if not exist %LIBRARY_LIB%/cudnn_adv_train.lib exit 1      # [win]
    - if not exist %LIBRARY_BIN%/cudnn64_8.dll exit 1  # [win]
    - if not exist %LIBRARY_BIN%/cudnn_adv_train64_8.dll exit 1  # [win]
    - test -f $PREFIX/include/cudnn.h                  # [linux]
    - test -f $PREFIX/include/cudnn_adv_train.h        # [linux]
    - test -f $PREFIX/lib/libcudnn.so                  # [linux]
    - test -f $PREFIX/lib/libcudnn_adv_train.so        # [linux]

about:
  home: https://developer.nvidia.com/cudnn
  license: LicenseRef-cuDNN-Software-License-Agreement
  license_file: NVIDIA_SLA_cuDNN_Support.txt
  license_url: https://docs.nvidia.com/deeplearning/cudnn/sla/index.html
  summary: "NVIDIA's cuDNN deep neural network acceleration library"
  description: |
    NVIDIA CUDA Deep Neural Network (cuDNN) is a GPU-accelerated library of
    primitives for deep neural networks. It provides highly tuned
    implementations of routines arising frequently in DNN applications.

    License Agreements:- The packages are governed by the NVIDIA cuDNN
    Software License Agreement (EULA). By downloading and using the packages,
    you accept the terms and conditions of the NVIDIA cuDNN EULA -
    https://docs.nvidia.com/deeplearning/cudnn/sla/index.html
  doc_url: https://docs.nvidia.com/deeplearning/cudnn/
  dev_url: https://developer.nvidia.com/rdp/cudnn-download

extra:
  recipe-maintainers:
    - ivanyashchuk
    - leofang
    - kkraus14
